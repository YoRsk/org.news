<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
    <!--配置DispatcherServlet-->
    <servlet>
        <servlet-name>news-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 配置springmvc需要加载的配置文件
            ①：springDao-config.xml.②springService-config.xml.③springWeb-config.xml的配置
            springmvc 的实现路径是Mybatis->spring->springMvc.
        -->
        <init-param>
            <!--contextLoaderListener class ->contextLoader class
            public static final String CONFIG_LOCATION_PARAM = "contextConfigLocation";
            -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring*.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>news-dispatcher</servlet-name>
        <!--默认匹配所有请求-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 添加默认servlet取消对图片资源的拦截-->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpeg</url-pattern>
    </servlet-mapping>

    <!-- 中文乱码处理 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>Listener.SessionListener</listener-class>
    </listener>

</web-app>
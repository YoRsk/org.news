<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.NewDao">
    <!-- 插入用户-->
    <insert id="insertNew" parameterType="entity.New">
        insert ignore into new(category_id,user_id,title,content,key_words)
        values(#{categoryId},#{userId},#{title},#{content},#{keyWords})
    </insert>
    <!-- 通过新闻Id 获取新闻数据-->
    <select id="queryByNewId" resultType="entity.New">
        select new_id,category_id,user_id,title,content,create_time,key_words
        from new
        where
        new_id=#{newId}
    </select>
    <!-- 通过新闻标题获取新闻数据-->
    <select id="queryByNewName" resultType="entity.New">
        select new_id,category_id,user_id,title,content,create_time,key_words
        from new
        where
        title=#{title}
    </select>
    <!-- 通过类型Id获取新闻数据-->
    <select id="queryByCategoryId" resultType="entity.New">
        select new_id,category_id,user_id,title,content,create_time,key_words
        from new
        where category_id=#{categoryId}
        order by create_time desc
    </select>
    <!-- 通过作者ID获得新闻列表-->
    <select id="queryByUserId" resultType="dto.NewsData">
        select n.new_id "aNew.new_id",
        n.category_id "aNew.category_id",
        n.user_id "aNew.user_id",
        n.title "aNew.title",
        n.content "aNew.content",
        n.create_time "aNew.create_time",
        n.key_words "aNew.key_words",
        category_name "typeName",
        u.user_name
        from new n,user u,category cate
        where n.user_id=u.user_id
        and n.category_id=cate.category_id
        and u.user_id=#{userId}
    </select>
    <!-- 获取全部新闻信息-->
    <select id="queryAllNews" resultType="dto.NewsData">
        select n.new_id "aNew.new_id",
        n.category_id "aNew.category_id",
        n.user_id "aNew.user_id",
        n.title "aNew.title",
        n.content "aNew.content",
        n.create_time "aNew.create_time",
        n.key_words "aNew.key_words",
        category_name "typeName",
        u.user_name
        from new n,user u,category cate
        where n.user_id=u.user_id
        and n.category_id=cate.category_id
        order by n.create_time desc
    </select>
    <!-- 模糊查找-->
    <select id="selectByLike" resultType="dto.NewsData">
        <bind name="keys" value="'%' + key + '%'" />
        select n.new_id "aNew.new_id",
        n.category_id "aNew.category_id",
        n.user_id "aNew.user_id",
        n.title "aNew.title",
        n.content "aNew.content",
        n.create_time "aNew.create_time",
        n.key_words "aNew.key_words",
        category_name "typeName",
        u.user_name
        from new n inner join user u on n.user_id=u.user_id
        inner join category cate on n.category_id=cate.category_id
        where
            cate.category_name like #{keys}
            or u.user_name like #{keys}
            or n.title like #{keys}
            or n.key_words like #{keys}
        order by n.create_time desc
    </select>
    <!-- 关键字查找-->
    <select id="selectByKeyWords" resultType="dto.NewsData">
        <bind name="keys" value="'%' + keyWords + '%'" />
        select n.new_id "aNew.new_id",
        n.category_id "aNew.category_id",
        n.user_id "aNew.user_id",
        n.title "aNew.title",
        n.content "aNew.content",
        n.create_time "aNew.create_time",
        n.key_words "aNew.key_words",
        category_name "typeName",
        u.user_name
        from new n inner join user u on n.user_id=u.user_id
        inner join category cate on n.category_id=cate.category_id
        where
        n.key_words like #{keys}
    </select>
    <!-- 刪除新闻-->
    <delete id="deleteNew">
        delete
        from  new
        where new_id=#{newId}
    </delete>
    <!-- 更新新闻-->
    <update id="updateNew" parameterType="entity.New">
        update new
        set
            category_id=#{categoryId},
            user_id=#{userId},
            title=#{title},
            content=#{content},
            key_words=#{keyWords}
        where new_id=#{newId}

    </update>
</mapper>